9. Palindrome Number

Given an integer x, return true if x is palindrome integer.

An integer is a palindrome when it reads the same backward as forward.

For example, 121 is a palindrome while 123 is not.
 

Example 1:

Input: x = 121
Output: true
Explanation: 121 reads as 121 from left to right and from right to left.
Example 2:

Input: x = -121
Output: false
Explanation: From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.
Example 3:

Input: x = 10
Output: false
Explanation: Reads 01 from right to left. Therefore it is not a palindrome.
 

Constraints:

-231 <= x <= 231 - 1
 

Follow up: Could you solve it without converting the integer to a string?

class Solution {
public:
    bool isPalindrome(int x) {
        /*
        1. reverse the given number to create a mirror image
            1.1) iterate for each digit 
            1.2) take least weighted digit first and multiply with 10 to push it one weigh up
        2. compare input and mirror image number
        */
        long orgX=x, mirrorX=0, deno=0;
        while(x>0)
        {
            deno = x%10;
            x = x/10;
            mirrorX = mirrorX * 10 + deno;
        }
        if(mirrorX == orgX) return true; // palindrome
        return false; // default Not a palindrome
    }
};

Runtime: 0 ms, faster than 100.00% of C++ online submissions for Palindrome Number.
Memory Usage: 6 MB, less than 33.43% of C++ online submissions for Palindrome Number.
