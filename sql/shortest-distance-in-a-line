SELECT MIN(ABS(p1.x-p2.x)) shortest
FROM point p1,
     point p2 // FULL OUTER JOIN 
WHERE p1.x!=p2.x

/***
Follow-up: What if all these points have an id and are arranged from the left most to the right most of x axis? 
ANSWER:
======
AS the previous question states the value is unique, i have used 'x' value in the where clause.
if we have an explicit id. where clause should check for 'ID' for preventing self distance calulation
*******/

/******
Table point holds the x coordinate of some points on x-axis in a plane, which are all integers. 
 
Write a query to find the shortest distance between two points in these points. 
 
| x   |
|-----|
| -1  |
| 0   |
| 2   |
 
The shortest distance is '1' obviously, which is from point '-1' to '0'. So the output is as below: 
 
| shortest|
|---------|
| 1       |
 
Note: Every point is unique, which means there is no duplicates in table point. 
 
Follow-up: What if all these points have an id and are arranged from the left most to the right most of x axis? 

*******/
