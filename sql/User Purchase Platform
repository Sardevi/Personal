
1127. User Purchase Platform

Table: Spending

+-------------+---------+
| Column Name | Type    |
+-------------+---------+
| user_id     | int     |
| spend_date  | date    |
| platform    | enum    | 
| amount      | int     |
+-------------+---------+
The table logs the history of the spending of users that make purchases from an online shopping website that has a desktop and a mobile application.
(user_id, spend_date, platform) is the primary key of this table.
The platform column is an ENUM type of ('desktop', 'mobile').
 

Write an SQL query to find the total number of users and the total amount spent using the mobile only, the desktop only, and both mobile and desktop together for each date.

Return the result table in any order.

The query result format is in the following example.

 

Example 1:

Input: 
Spending table:
+---------+------------+----------+--------+
| user_id | spend_date | platform | amount |
+---------+------------+----------+--------+
| 1       | 2019-07-01 | mobile   | 100    |
| 1       | 2019-07-01 | desktop  | 100    |
| 2       | 2019-07-01 | mobile   | 100    |
| 2       | 2019-07-02 | mobile   | 100    |
| 3       | 2019-07-01 | desktop  | 100    |
| 3       | 2019-07-02 | desktop  | 100    |
+---------+------------+----------+--------+
Output: 
+------------+----------+--------------+-------------+
| spend_date | platform | total_amount | total_users |
+------------+----------+--------------+-------------+
| 2019-07-01 | desktop  | 100          | 1           |
| 2019-07-01 | mobile   | 100          | 1           |
| 2019-07-01 | both     | 200          | 1           |
| 2019-07-02 | desktop  | 100          | 1           |
| 2019-07-02 | mobile   | 100          | 1           |
| 2019-07-02 | both     | 0            | 0           |
+------------+----------+--------------+-------------+ 
Explanation: 
On 2019-07-01, user 1 purchased using both desktop and mobile, user 2 purchased using mobile only and user 3 purchased using desktop only.
On 2019-07-02, user 2 purchased using mobile only, user 3 purchased using desktop only and no one purchased using both platforms.

/*Solution :  Create a tag for each row which platform it belongs to
Alg: 
1. For every tag_platform, per date how much sale and total unique user
2. cross it with all possible date and platorms to fill the absent rows*/
WITH sd AS
(
    SELECT DISTINCT spend_date
    FROM Spending
), p AS
(
    SELECT "mobile" platform
    UNION 
    SELECT "desktop" platform
    UNION 
    SELECT "both" platform
),
spd AS
(
   SELECT spend_date,
          platform
   FROM sd, p
), tags AS
(
 SELECT *,
        IF(COUNT(platform) OVER (PARTITION BY spend_date,user_id)=2,"both", platform) taglabel
    FROM Spending
 ), list AS
(
    SELECT spend_date,
           taglabel,
           SUM(amount) total_amount,
           COUNT(DISTINCT user_id) total_users
    FROM tags
    GROUP BY spend_date,
           taglabel
)
SELECT spd.spend_date,
       spd.platform,
       IFNULL(total_amount,0) total_amount,
       IFNULL(total_users,0) total_users
FROM list l
RIGHT JOIN spd
ON spd.spend_date = l.spend_date
AND spd.platform = l.taglabel
