1205. Monthly Transactions II
Table: Transactions

+----------------+---------+
| Column Name    | Type    |
+----------------+---------+
| id             | int     |
| country        | varchar |
| state          | enum    |
| amount         | int     |
| trans_date     | date    |
+----------------+---------+
id is the primary key of this table.
The table has information about incoming transactions.
The state column is an enum of type ["approved", "declined"].
Table: Chargebacks

+----------------+---------+
| Column Name    | Type    |
+----------------+---------+
| trans_id       | int     |
| trans_date     | date    |
+----------------+---------+
Chargebacks contains basic information regarding incoming chargebacks from some transactions placed in Transactions table.
trans_id is a foreign key to the id column of Transactions table.
Each chargeback corresponds to a transaction made previously even if they were not approved.
 

Write an SQL query to find for each month and country: the number of approved transactions and their total amount, the number of chargebacks, and their total amount.

Note: In your query, given the month and country, ignore rows with all zeros.

Return the result table in any order.

The query result format is in the following example.

 

Example 1:

Input: 
Transactions table:
+-----+---------+----------+--------+------------+
| id  | country | state    | amount | trans_date |
+-----+---------+----------+--------+------------+
| 101 | US      | approved | 1000   | 2019-05-18 |
| 102 | US      | declined | 2000   | 2019-05-19 |
| 103 | US      | approved | 3000   | 2019-06-10 |
| 104 | US      | declined | 4000   | 2019-06-13 |
| 105 | US      | approved | 5000   | 2019-06-15 |
+-----+---------+----------+--------+------------+
Chargebacks table:
+----------+------------+
| trans_id | trans_date |
+----------+------------+
| 102      | 2019-05-29 |
| 101      | 2019-06-30 |
| 105      | 2019-09-18 |
+----------+------------+
Output: 
+---------+---------+----------------+-----------------+------------------+-------------------+
| month   | country | approved_count | approved_amount | chargeback_count | chargeback_amount |
+---------+---------+----------------+-----------------+------------------+-------------------+
| 2019-05 | US      | 1              | 1000            | 1                | 2000              |
| 2019-06 | US      | 2              | 8000            | 1                | 1000              |
| 2019-09 | US      | 0              | 0               | 1                | 5000              |
+---------+---------+----------------+-----------------+------------------+-------------------+

# MySQL query statement below
/*
Alg:
1. Find the approved_count and sum(amount) Approved_amount per month per country 
2. Find the chargeback per month and per country
3. FULL outer Join (1.) and (2.)
*/


WITH apt AS
(
    SELECT DATE_FORMAT(trans_date,'%Y-%m') month,
           country,
           COUNT(1) approved_count,
           SUM(amount) approved_amount
    FROM Transactions
    WHERE state='approved'
    GROUP BY 1,2
), cbt AS
(
    SELECT DATE_FORMAT(c.trans_date,'%Y-%m') month,
           t.country,
           COUNT(1) chargeback_count,
           SUM(t.amount) chargeback_amount
    FROM Transactions t
    JOIN Chargebacks c
      ON c.trans_id=t.id
    GROUP BY 1,2
)
SELECT IFNULL(apt.month,cbt.month) month,
       IFNULL(apt.country,cbt.country) country,
       IFNULL(apt.approved_count,0) approved_count,
       IFNULL(apt.approved_amount,0) approved_amount,
       IFNULL(cbt.chargeback_count,0) chargeback_count,
       IFNULL(cbt.chargeback_amount,0) chargeback_amount
FROM apt
RIGHT OUTER JOIN cbt
ON apt.month = cbt.month
AND apt.country = cbt.country
UNION
SELECT IFNULL(cbt.month,apt.month) month,
       IFNULL(cbt.country,apt.country) country,
       IFNULL(apt.approved_count,0) approved_count,
       IFNULL(apt.approved_amount,0) approved_amount,
       IFNULL(cbt.chargeback_count,0) chargeback_count,
       IFNULL(cbt.chargeback_amount,0) chargeback_amount
FROM apt
LEFT OUTER JOIN cbt
ON apt.month = cbt.month
AND apt.country = cbt.country

Runtime: 717 ms, faster than 28.91% of MySQL online submissions for Monthly Transactions II.
Memory Usage: 0B, less than 100.00% of MySQL online submissions for Monthly Transactions II.
Next challenges:

