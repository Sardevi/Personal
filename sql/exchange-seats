Mary is a teacher in a middle school and she has a table seat storing students' names and their corresponding seat ids.
The column id is continuous increment. 
 
Mary wants to change seats for the adjacent students. 
 
Can you write a SQL query to output the result for Mary? 
 
+---------+---------+
|    id   | student |
+---------+---------+
|    1    | Abbot   |
|    2    | Doris   |
|    3    | Emerson |
|    4    | Green   |
|    5    | Jeames  |
+---------+---------+
For the sample input, the output is: 
 
+---------+---------+
|    id   | student |
+---------+---------+
|    1    | Doris   |
|    2    | Abbot   |
|    3    | Green   |
|    4    | Emerson |
|    5    | Jeames  |
+---------+---------+
Note:
If the number of students is odd, there is no need to change the last one's seat.

SOLUTION
========

SELECT id,student
FROM
(
    SELECT oddd.id,evenn.student
    FROM seat oddd 
    JOIN seat evenn
      ON oddd.id=evenn.id-1
     AND MOD(oddd.id,2)=1
UNION
    SELECT evenn.id,oddd.student
    FROM seat oddd 
    JOIN seat evenn
      ON oddd.id=evenn.id-1
     AND MOD(oddd.id,2)=1
UNION
    SELECT id, student
    FROM seat
    WHERE id=(SELECT MAX(id) AS maxid
              FROM seat)
    AND MOD(id,2)=1
) newlist
ORDER BY Id
